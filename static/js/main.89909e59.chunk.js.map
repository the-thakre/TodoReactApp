{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","console","log","onChange","event","setInputText","target","value","type","inputText","className","onClick","preventDefault","setTodos","todos","text","completed","id","Math","random","name","setStatus","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89909e59.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = (props) => {\r\n  const inputTextHandler=(event)=>{\r\n    props.setInputText(event.target.value);\r\n  }\r\n\r\n  const submitTodohandler=(event)=>{\r\n    event.preventDefault();\r\n    props.setTodos([\r\n      ...props.todos,\r\n      {\r\n        text:props.inputText,\r\n        completed:false,\r\n        id:Math.random()*1000\r\n      }\r\n    ]);\r\n    props.setInputText(\"\");\r\n\r\n  }\r\n  console.log(props)\r\n  const statusHandler=(event)=>{\r\n    props.setStatus(event.target.value);\r\n  }\r\n\r\n\r\n    return (\r\n        <div>\r\n             <form>\r\n      <input onChange={inputTextHandler} type=\"text\" value={props.inputText} className=\"todo-input\" />\r\n      <button className=\"todo-button\" type=\"submit\" onClick={submitTodohandler}>\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select name=\"todos\" className=\"filter-todo\" onChange={statusHandler}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\nconst Todo = (props) => {\r\n\r\n    const deleteHandler=()=>{\r\n        props.setTodos(props.todos.filter((el)=> el.id !== props.todo.id))\r\n    }\r\n\r\n    const completeHandler=()=>{\r\n        props.setTodos(props.todos.map((item)=>{\r\n            if(item.id === props.todo.id)\r\n            {\r\n                return {\r\n                    ...item,\r\n                    completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${props.todo.completed ? \"completed\" : \"\"}`}>{props.text}</li> \r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n\r\n            <button className=\"trash-btn\" onClick={deleteHandler}><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = (props) => {\r\n    return (\r\n        <div>\r\n             <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {props.filteredTodos.map((todo)=>(\r\n                        <Todo\r\n                        todo={todo} \r\n                        setTodos={props.setTodos} todos={props.todos} key={todo.id} text={todo.text}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText,setInputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n\n  const [filteredTodos,setFilteredTodos]=useState([]);\n\n  useEffect(()=>{\n    filterHandler();\n    \n  },[todos,status])\n\n\n  const filterHandler=()=>{\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo)=>todo.completed === true))\n        break;\n\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo)=>todo.completed === false))\n        break;\n    \n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n  const saveLocalTodos=()=>{\n    if(localStorage.getItem(\"todos\")===null)\n    {\n      localStorage.setItem(\"todos\",JSON.stringify([]));\n\n    }\n    else{\n      localStorage.setItem(\"todos\",JSON.stringify(todos));\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Thackeray's Todo App</h1>\n      </header>\n      <Form \n\n      setInputText={setInputText} \n      todos={todos} \n      setTodos={setTodos} \n      inputText={inputText}\n      setStatus={setStatus} \n      \n      />\n\n      <TodoList setTodos={setTodos} filteredTodos={filteredTodos} todos={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}